# coding: utf-8

"""
    Bungie.Net API

    These endpoints constitute the functionality exposed by Bungie.net, both for more traditional website functionality and for connectivity to Bungie video games and their related functionality.  # noqa: E501

    OpenAPI spec version: 2.1.1
    Contact: support@bungie.com
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""


import pprint
import re  # noqa: F401

import six

from swagger_client.models.destiny_definitions_items_destiny_derived_item_definition import DestinyDefinitionsItemsDestinyDerivedItemDefinition  # noqa: F401,E501


class DestinyDefinitionsItemsDestinyDerivedItemCategoryDefinition(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'category_description': 'str',
        'items': 'list[DestinyDefinitionsItemsDestinyDerivedItemDefinition]'
    }

    attribute_map = {
        'category_description': 'categoryDescription',
        'items': 'items'
    }

    def __init__(self, category_description=None, items=None):  # noqa: E501
        """DestinyDefinitionsItemsDestinyDerivedItemCategoryDefinition - a model defined in Swagger"""  # noqa: E501

        self._category_description = None
        self._items = None
        self.discriminator = None

        if category_description is not None:
            self.category_description = category_description
        if items is not None:
            self.items = items

    @property
    def category_description(self):
        """Gets the category_description of this DestinyDefinitionsItemsDestinyDerivedItemCategoryDefinition.  # noqa: E501

        The localized string for the category title. This will be something describing the items you can get as a group, or your likelihood/the quantity you'll get.  # noqa: E501

        :return: The category_description of this DestinyDefinitionsItemsDestinyDerivedItemCategoryDefinition.  # noqa: E501
        :rtype: str
        """
        return self._category_description

    @category_description.setter
    def category_description(self, category_description):
        """Sets the category_description of this DestinyDefinitionsItemsDestinyDerivedItemCategoryDefinition.

        The localized string for the category title. This will be something describing the items you can get as a group, or your likelihood/the quantity you'll get.  # noqa: E501

        :param category_description: The category_description of this DestinyDefinitionsItemsDestinyDerivedItemCategoryDefinition.  # noqa: E501
        :type: str
        """

        self._category_description = category_description

    @property
    def items(self):
        """Gets the items of this DestinyDefinitionsItemsDestinyDerivedItemCategoryDefinition.  # noqa: E501

        This is the list of all of the items for this category and the basic properties we'll know about them.  # noqa: E501

        :return: The items of this DestinyDefinitionsItemsDestinyDerivedItemCategoryDefinition.  # noqa: E501
        :rtype: list[DestinyDefinitionsItemsDestinyDerivedItemDefinition]
        """
        return self._items

    @items.setter
    def items(self, items):
        """Sets the items of this DestinyDefinitionsItemsDestinyDerivedItemCategoryDefinition.

        This is the list of all of the items for this category and the basic properties we'll know about them.  # noqa: E501

        :param items: The items of this DestinyDefinitionsItemsDestinyDerivedItemCategoryDefinition.  # noqa: E501
        :type: list[DestinyDefinitionsItemsDestinyDerivedItemDefinition]
        """

        self._items = items

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, DestinyDefinitionsItemsDestinyDerivedItemCategoryDefinition):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
