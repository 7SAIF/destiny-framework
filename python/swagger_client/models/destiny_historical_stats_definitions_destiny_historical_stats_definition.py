# coding: utf-8

"""
    Bungie.Net API

    These endpoints constitute the functionality exposed by Bungie.net, both for more traditional website functionality and for connectivity to Bungie video games and their related functionality.  # noqa: E501

    OpenAPI spec version: 2.1.1
    Contact: support@bungie.com
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""


import pprint
import re  # noqa: F401

import six

from swagger_client.models.destiny_historical_stats_definitions_destiny_activity_mode_type import DestinyHistoricalStatsDefinitionsDestinyActivityModeType  # noqa: F401,E501
from swagger_client.models.destiny_historical_stats_definitions_period_type import DestinyHistoricalStatsDefinitionsPeriodType  # noqa: F401,E501


class DestinyHistoricalStatsDefinitionsDestinyHistoricalStatsDefinition(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'stat_id': 'str',
        'group': 'object',
        'period_types': 'list[DestinyHistoricalStatsDefinitionsPeriodType]',
        'modes': 'list[DestinyHistoricalStatsDefinitionsDestinyActivityModeType]',
        'category': 'object',
        'stat_name': 'str',
        'stat_name_abbr': 'str',
        'stat_description': 'str',
        'unit_type': 'object',
        'icon_image': 'str',
        'merge_method': 'int',
        'unit_label': 'str',
        'weight': 'int',
        'medal_tier_hash': 'int'
    }

    attribute_map = {
        'stat_id': 'statId',
        'group': 'group',
        'period_types': 'periodTypes',
        'modes': 'modes',
        'category': 'category',
        'stat_name': 'statName',
        'stat_name_abbr': 'statNameAbbr',
        'stat_description': 'statDescription',
        'unit_type': 'unitType',
        'icon_image': 'iconImage',
        'merge_method': 'mergeMethod',
        'unit_label': 'unitLabel',
        'weight': 'weight',
        'medal_tier_hash': 'medalTierHash'
    }

    def __init__(self, stat_id=None, group=None, period_types=None, modes=None, category=None, stat_name=None, stat_name_abbr=None, stat_description=None, unit_type=None, icon_image=None, merge_method=None, unit_label=None, weight=None, medal_tier_hash=None):  # noqa: E501
        """DestinyHistoricalStatsDefinitionsDestinyHistoricalStatsDefinition - a model defined in Swagger"""  # noqa: E501

        self._stat_id = None
        self._group = None
        self._period_types = None
        self._modes = None
        self._category = None
        self._stat_name = None
        self._stat_name_abbr = None
        self._stat_description = None
        self._unit_type = None
        self._icon_image = None
        self._merge_method = None
        self._unit_label = None
        self._weight = None
        self._medal_tier_hash = None
        self.discriminator = None

        if stat_id is not None:
            self.stat_id = stat_id
        if group is not None:
            self.group = group
        if period_types is not None:
            self.period_types = period_types
        if modes is not None:
            self.modes = modes
        if category is not None:
            self.category = category
        if stat_name is not None:
            self.stat_name = stat_name
        if stat_name_abbr is not None:
            self.stat_name_abbr = stat_name_abbr
        if stat_description is not None:
            self.stat_description = stat_description
        if unit_type is not None:
            self.unit_type = unit_type
        if icon_image is not None:
            self.icon_image = icon_image
        if merge_method is not None:
            self.merge_method = merge_method
        if unit_label is not None:
            self.unit_label = unit_label
        if weight is not None:
            self.weight = weight
        if medal_tier_hash is not None:
            self.medal_tier_hash = medal_tier_hash

    @property
    def stat_id(self):
        """Gets the stat_id of this DestinyHistoricalStatsDefinitionsDestinyHistoricalStatsDefinition.  # noqa: E501

        Unique programmer friendly ID for this stat  # noqa: E501

        :return: The stat_id of this DestinyHistoricalStatsDefinitionsDestinyHistoricalStatsDefinition.  # noqa: E501
        :rtype: str
        """
        return self._stat_id

    @stat_id.setter
    def stat_id(self, stat_id):
        """Sets the stat_id of this DestinyHistoricalStatsDefinitionsDestinyHistoricalStatsDefinition.

        Unique programmer friendly ID for this stat  # noqa: E501

        :param stat_id: The stat_id of this DestinyHistoricalStatsDefinitionsDestinyHistoricalStatsDefinition.  # noqa: E501
        :type: str
        """

        self._stat_id = stat_id

    @property
    def group(self):
        """Gets the group of this DestinyHistoricalStatsDefinitionsDestinyHistoricalStatsDefinition.  # noqa: E501

        Statistic group  # noqa: E501

        :return: The group of this DestinyHistoricalStatsDefinitionsDestinyHistoricalStatsDefinition.  # noqa: E501
        :rtype: object
        """
        return self._group

    @group.setter
    def group(self, group):
        """Sets the group of this DestinyHistoricalStatsDefinitionsDestinyHistoricalStatsDefinition.

        Statistic group  # noqa: E501

        :param group: The group of this DestinyHistoricalStatsDefinitionsDestinyHistoricalStatsDefinition.  # noqa: E501
        :type: object
        """

        self._group = group

    @property
    def period_types(self):
        """Gets the period_types of this DestinyHistoricalStatsDefinitionsDestinyHistoricalStatsDefinition.  # noqa: E501

        Time periods the statistic covers  # noqa: E501

        :return: The period_types of this DestinyHistoricalStatsDefinitionsDestinyHistoricalStatsDefinition.  # noqa: E501
        :rtype: list[DestinyHistoricalStatsDefinitionsPeriodType]
        """
        return self._period_types

    @period_types.setter
    def period_types(self, period_types):
        """Sets the period_types of this DestinyHistoricalStatsDefinitionsDestinyHistoricalStatsDefinition.

        Time periods the statistic covers  # noqa: E501

        :param period_types: The period_types of this DestinyHistoricalStatsDefinitionsDestinyHistoricalStatsDefinition.  # noqa: E501
        :type: list[DestinyHistoricalStatsDefinitionsPeriodType]
        """

        self._period_types = period_types

    @property
    def modes(self):
        """Gets the modes of this DestinyHistoricalStatsDefinitionsDestinyHistoricalStatsDefinition.  # noqa: E501

        Game modes where this statistic can be reported.  # noqa: E501

        :return: The modes of this DestinyHistoricalStatsDefinitionsDestinyHistoricalStatsDefinition.  # noqa: E501
        :rtype: list[DestinyHistoricalStatsDefinitionsDestinyActivityModeType]
        """
        return self._modes

    @modes.setter
    def modes(self, modes):
        """Sets the modes of this DestinyHistoricalStatsDefinitionsDestinyHistoricalStatsDefinition.

        Game modes where this statistic can be reported.  # noqa: E501

        :param modes: The modes of this DestinyHistoricalStatsDefinitionsDestinyHistoricalStatsDefinition.  # noqa: E501
        :type: list[DestinyHistoricalStatsDefinitionsDestinyActivityModeType]
        """

        self._modes = modes

    @property
    def category(self):
        """Gets the category of this DestinyHistoricalStatsDefinitionsDestinyHistoricalStatsDefinition.  # noqa: E501

        Category for the stat.  # noqa: E501

        :return: The category of this DestinyHistoricalStatsDefinitionsDestinyHistoricalStatsDefinition.  # noqa: E501
        :rtype: object
        """
        return self._category

    @category.setter
    def category(self, category):
        """Sets the category of this DestinyHistoricalStatsDefinitionsDestinyHistoricalStatsDefinition.

        Category for the stat.  # noqa: E501

        :param category: The category of this DestinyHistoricalStatsDefinitionsDestinyHistoricalStatsDefinition.  # noqa: E501
        :type: object
        """

        self._category = category

    @property
    def stat_name(self):
        """Gets the stat_name of this DestinyHistoricalStatsDefinitionsDestinyHistoricalStatsDefinition.  # noqa: E501

        Display name  # noqa: E501

        :return: The stat_name of this DestinyHistoricalStatsDefinitionsDestinyHistoricalStatsDefinition.  # noqa: E501
        :rtype: str
        """
        return self._stat_name

    @stat_name.setter
    def stat_name(self, stat_name):
        """Sets the stat_name of this DestinyHistoricalStatsDefinitionsDestinyHistoricalStatsDefinition.

        Display name  # noqa: E501

        :param stat_name: The stat_name of this DestinyHistoricalStatsDefinitionsDestinyHistoricalStatsDefinition.  # noqa: E501
        :type: str
        """

        self._stat_name = stat_name

    @property
    def stat_name_abbr(self):
        """Gets the stat_name_abbr of this DestinyHistoricalStatsDefinitionsDestinyHistoricalStatsDefinition.  # noqa: E501

        Display name abbreviated  # noqa: E501

        :return: The stat_name_abbr of this DestinyHistoricalStatsDefinitionsDestinyHistoricalStatsDefinition.  # noqa: E501
        :rtype: str
        """
        return self._stat_name_abbr

    @stat_name_abbr.setter
    def stat_name_abbr(self, stat_name_abbr):
        """Sets the stat_name_abbr of this DestinyHistoricalStatsDefinitionsDestinyHistoricalStatsDefinition.

        Display name abbreviated  # noqa: E501

        :param stat_name_abbr: The stat_name_abbr of this DestinyHistoricalStatsDefinitionsDestinyHistoricalStatsDefinition.  # noqa: E501
        :type: str
        """

        self._stat_name_abbr = stat_name_abbr

    @property
    def stat_description(self):
        """Gets the stat_description of this DestinyHistoricalStatsDefinitionsDestinyHistoricalStatsDefinition.  # noqa: E501

        Description of a stat if applicable.  # noqa: E501

        :return: The stat_description of this DestinyHistoricalStatsDefinitionsDestinyHistoricalStatsDefinition.  # noqa: E501
        :rtype: str
        """
        return self._stat_description

    @stat_description.setter
    def stat_description(self, stat_description):
        """Sets the stat_description of this DestinyHistoricalStatsDefinitionsDestinyHistoricalStatsDefinition.

        Description of a stat if applicable.  # noqa: E501

        :param stat_description: The stat_description of this DestinyHistoricalStatsDefinitionsDestinyHistoricalStatsDefinition.  # noqa: E501
        :type: str
        """

        self._stat_description = stat_description

    @property
    def unit_type(self):
        """Gets the unit_type of this DestinyHistoricalStatsDefinitionsDestinyHistoricalStatsDefinition.  # noqa: E501

        Unit, if any, for the statistic  # noqa: E501

        :return: The unit_type of this DestinyHistoricalStatsDefinitionsDestinyHistoricalStatsDefinition.  # noqa: E501
        :rtype: object
        """
        return self._unit_type

    @unit_type.setter
    def unit_type(self, unit_type):
        """Sets the unit_type of this DestinyHistoricalStatsDefinitionsDestinyHistoricalStatsDefinition.

        Unit, if any, for the statistic  # noqa: E501

        :param unit_type: The unit_type of this DestinyHistoricalStatsDefinitionsDestinyHistoricalStatsDefinition.  # noqa: E501
        :type: object
        """

        self._unit_type = unit_type

    @property
    def icon_image(self):
        """Gets the icon_image of this DestinyHistoricalStatsDefinitionsDestinyHistoricalStatsDefinition.  # noqa: E501

        Optional URI to an icon for the statistic  # noqa: E501

        :return: The icon_image of this DestinyHistoricalStatsDefinitionsDestinyHistoricalStatsDefinition.  # noqa: E501
        :rtype: str
        """
        return self._icon_image

    @icon_image.setter
    def icon_image(self, icon_image):
        """Sets the icon_image of this DestinyHistoricalStatsDefinitionsDestinyHistoricalStatsDefinition.

        Optional URI to an icon for the statistic  # noqa: E501

        :param icon_image: The icon_image of this DestinyHistoricalStatsDefinitionsDestinyHistoricalStatsDefinition.  # noqa: E501
        :type: str
        """

        self._icon_image = icon_image

    @property
    def merge_method(self):
        """Gets the merge_method of this DestinyHistoricalStatsDefinitionsDestinyHistoricalStatsDefinition.  # noqa: E501

        Optional icon for the statistic  # noqa: E501

        :return: The merge_method of this DestinyHistoricalStatsDefinitionsDestinyHistoricalStatsDefinition.  # noqa: E501
        :rtype: int
        """
        return self._merge_method

    @merge_method.setter
    def merge_method(self, merge_method):
        """Sets the merge_method of this DestinyHistoricalStatsDefinitionsDestinyHistoricalStatsDefinition.

        Optional icon for the statistic  # noqa: E501

        :param merge_method: The merge_method of this DestinyHistoricalStatsDefinitionsDestinyHistoricalStatsDefinition.  # noqa: E501
        :type: int
        """
        allowed_values = [0, 1, 2]  # noqa: E501
        if merge_method not in allowed_values:
            raise ValueError(
                "Invalid value for `merge_method` ({0}), must be one of {1}"  # noqa: E501
                .format(merge_method, allowed_values)
            )

        self._merge_method = merge_method

    @property
    def unit_label(self):
        """Gets the unit_label of this DestinyHistoricalStatsDefinitionsDestinyHistoricalStatsDefinition.  # noqa: E501

        Localized Unit Name for the stat.  # noqa: E501

        :return: The unit_label of this DestinyHistoricalStatsDefinitionsDestinyHistoricalStatsDefinition.  # noqa: E501
        :rtype: str
        """
        return self._unit_label

    @unit_label.setter
    def unit_label(self, unit_label):
        """Sets the unit_label of this DestinyHistoricalStatsDefinitionsDestinyHistoricalStatsDefinition.

        Localized Unit Name for the stat.  # noqa: E501

        :param unit_label: The unit_label of this DestinyHistoricalStatsDefinitionsDestinyHistoricalStatsDefinition.  # noqa: E501
        :type: str
        """

        self._unit_label = unit_label

    @property
    def weight(self):
        """Gets the weight of this DestinyHistoricalStatsDefinitionsDestinyHistoricalStatsDefinition.  # noqa: E501

        Weight assigned to this stat indicating its relative impressiveness.  # noqa: E501

        :return: The weight of this DestinyHistoricalStatsDefinitionsDestinyHistoricalStatsDefinition.  # noqa: E501
        :rtype: int
        """
        return self._weight

    @weight.setter
    def weight(self, weight):
        """Sets the weight of this DestinyHistoricalStatsDefinitionsDestinyHistoricalStatsDefinition.

        Weight assigned to this stat indicating its relative impressiveness.  # noqa: E501

        :param weight: The weight of this DestinyHistoricalStatsDefinitionsDestinyHistoricalStatsDefinition.  # noqa: E501
        :type: int
        """

        self._weight = weight

    @property
    def medal_tier_hash(self):
        """Gets the medal_tier_hash of this DestinyHistoricalStatsDefinitionsDestinyHistoricalStatsDefinition.  # noqa: E501

        The tier associated with this medal - be it implicitly or explicitly.  # noqa: E501

        :return: The medal_tier_hash of this DestinyHistoricalStatsDefinitionsDestinyHistoricalStatsDefinition.  # noqa: E501
        :rtype: int
        """
        return self._medal_tier_hash

    @medal_tier_hash.setter
    def medal_tier_hash(self, medal_tier_hash):
        """Sets the medal_tier_hash of this DestinyHistoricalStatsDefinitionsDestinyHistoricalStatsDefinition.

        The tier associated with this medal - be it implicitly or explicitly.  # noqa: E501

        :param medal_tier_hash: The medal_tier_hash of this DestinyHistoricalStatsDefinitionsDestinyHistoricalStatsDefinition.  # noqa: E501
        :type: int
        """

        self._medal_tier_hash = medal_tier_hash

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, DestinyHistoricalStatsDefinitionsDestinyHistoricalStatsDefinition):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
