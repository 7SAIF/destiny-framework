# coding: utf-8

"""
    Bungie.Net API

    These endpoints constitute the functionality exposed by Bungie.net, both for more traditional website functionality and for connectivity to Bungie video games and their related functionality.  # noqa: E501

    OpenAPI spec version: 2.1.1
    Contact: support@bungie.com
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""


import pprint
import re  # noqa: F401

import six

from swagger_client.models.destiny_historical_stats_definitions_destiny_activity_mode_type import DestinyHistoricalStatsDefinitionsDestinyActivityModeType  # noqa: F401,E501


class DestinyHistoricalStatsDestinyHistoricalStatsActivity(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'reference_id': 'int',
        'director_activity_hash': 'int',
        'instance_id': 'int',
        'mode': 'object',
        'modes': 'list[DestinyHistoricalStatsDefinitionsDestinyActivityModeType]',
        'is_private': 'bool'
    }

    attribute_map = {
        'reference_id': 'referenceId',
        'director_activity_hash': 'directorActivityHash',
        'instance_id': 'instanceId',
        'mode': 'mode',
        'modes': 'modes',
        'is_private': 'isPrivate'
    }

    def __init__(self, reference_id=None, director_activity_hash=None, instance_id=None, mode=None, modes=None, is_private=None):  # noqa: E501
        """DestinyHistoricalStatsDestinyHistoricalStatsActivity - a model defined in Swagger"""  # noqa: E501

        self._reference_id = None
        self._director_activity_hash = None
        self._instance_id = None
        self._mode = None
        self._modes = None
        self._is_private = None
        self.discriminator = None

        if reference_id is not None:
            self.reference_id = reference_id
        if director_activity_hash is not None:
            self.director_activity_hash = director_activity_hash
        if instance_id is not None:
            self.instance_id = instance_id
        if mode is not None:
            self.mode = mode
        if modes is not None:
            self.modes = modes
        if is_private is not None:
            self.is_private = is_private

    @property
    def reference_id(self):
        """Gets the reference_id of this DestinyHistoricalStatsDestinyHistoricalStatsActivity.  # noqa: E501

        The unique hash identifier of the DestinyActivityDefinition that was played. If I had this to do over, it'd be named activityHash. Too late now.  # noqa: E501

        :return: The reference_id of this DestinyHistoricalStatsDestinyHistoricalStatsActivity.  # noqa: E501
        :rtype: int
        """
        return self._reference_id

    @reference_id.setter
    def reference_id(self, reference_id):
        """Sets the reference_id of this DestinyHistoricalStatsDestinyHistoricalStatsActivity.

        The unique hash identifier of the DestinyActivityDefinition that was played. If I had this to do over, it'd be named activityHash. Too late now.  # noqa: E501

        :param reference_id: The reference_id of this DestinyHistoricalStatsDestinyHistoricalStatsActivity.  # noqa: E501
        :type: int
        """

        self._reference_id = reference_id

    @property
    def director_activity_hash(self):
        """Gets the director_activity_hash of this DestinyHistoricalStatsDestinyHistoricalStatsActivity.  # noqa: E501

        The unique hash identifier of the DestinyActivityDefinition that was played.  # noqa: E501

        :return: The director_activity_hash of this DestinyHistoricalStatsDestinyHistoricalStatsActivity.  # noqa: E501
        :rtype: int
        """
        return self._director_activity_hash

    @director_activity_hash.setter
    def director_activity_hash(self, director_activity_hash):
        """Sets the director_activity_hash of this DestinyHistoricalStatsDestinyHistoricalStatsActivity.

        The unique hash identifier of the DestinyActivityDefinition that was played.  # noqa: E501

        :param director_activity_hash: The director_activity_hash of this DestinyHistoricalStatsDestinyHistoricalStatsActivity.  # noqa: E501
        :type: int
        """

        self._director_activity_hash = director_activity_hash

    @property
    def instance_id(self):
        """Gets the instance_id of this DestinyHistoricalStatsDestinyHistoricalStatsActivity.  # noqa: E501

        The unique identifier for this *specific* match that was played.  This value can be used to get additional data about this activity such as who else was playing via the GetPostGameCarnageReport endpoint.  # noqa: E501

        :return: The instance_id of this DestinyHistoricalStatsDestinyHistoricalStatsActivity.  # noqa: E501
        :rtype: int
        """
        return self._instance_id

    @instance_id.setter
    def instance_id(self, instance_id):
        """Sets the instance_id of this DestinyHistoricalStatsDestinyHistoricalStatsActivity.

        The unique identifier for this *specific* match that was played.  This value can be used to get additional data about this activity such as who else was playing via the GetPostGameCarnageReport endpoint.  # noqa: E501

        :param instance_id: The instance_id of this DestinyHistoricalStatsDestinyHistoricalStatsActivity.  # noqa: E501
        :type: int
        """

        self._instance_id = instance_id

    @property
    def mode(self):
        """Gets the mode of this DestinyHistoricalStatsDestinyHistoricalStatsActivity.  # noqa: E501

        Indicates the most specific game mode of the activity that we could find.  # noqa: E501

        :return: The mode of this DestinyHistoricalStatsDestinyHistoricalStatsActivity.  # noqa: E501
        :rtype: object
        """
        return self._mode

    @mode.setter
    def mode(self, mode):
        """Sets the mode of this DestinyHistoricalStatsDestinyHistoricalStatsActivity.

        Indicates the most specific game mode of the activity that we could find.  # noqa: E501

        :param mode: The mode of this DestinyHistoricalStatsDestinyHistoricalStatsActivity.  # noqa: E501
        :type: object
        """

        self._mode = mode

    @property
    def modes(self):
        """Gets the modes of this DestinyHistoricalStatsDestinyHistoricalStatsActivity.  # noqa: E501

        The list of all Activity Modes to which this activity applies, including aggregates. This will let you see, for example, whether the activity was both Clash and part of the Trials of the Nine event.  # noqa: E501

        :return: The modes of this DestinyHistoricalStatsDestinyHistoricalStatsActivity.  # noqa: E501
        :rtype: list[DestinyHistoricalStatsDefinitionsDestinyActivityModeType]
        """
        return self._modes

    @modes.setter
    def modes(self, modes):
        """Sets the modes of this DestinyHistoricalStatsDestinyHistoricalStatsActivity.

        The list of all Activity Modes to which this activity applies, including aggregates. This will let you see, for example, whether the activity was both Clash and part of the Trials of the Nine event.  # noqa: E501

        :param modes: The modes of this DestinyHistoricalStatsDestinyHistoricalStatsActivity.  # noqa: E501
        :type: list[DestinyHistoricalStatsDefinitionsDestinyActivityModeType]
        """

        self._modes = modes

    @property
    def is_private(self):
        """Gets the is_private of this DestinyHistoricalStatsDestinyHistoricalStatsActivity.  # noqa: E501

        Whether or not the match was a private match. There's no private matches in Destiny 2... yet... DUN DUN DUNNNN  # noqa: E501

        :return: The is_private of this DestinyHistoricalStatsDestinyHistoricalStatsActivity.  # noqa: E501
        :rtype: bool
        """
        return self._is_private

    @is_private.setter
    def is_private(self, is_private):
        """Sets the is_private of this DestinyHistoricalStatsDestinyHistoricalStatsActivity.

        Whether or not the match was a private match. There's no private matches in Destiny 2... yet... DUN DUN DUNNNN  # noqa: E501

        :param is_private: The is_private of this DestinyHistoricalStatsDestinyHistoricalStatsActivity.  # noqa: E501
        :type: bool
        """

        self._is_private = is_private

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, DestinyHistoricalStatsDestinyHistoricalStatsActivity):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
