# coding: utf-8

"""
    Bungie.Net API

    These endpoints constitute the functionality exposed by Bungie.net, both for more traditional website functionality and for connectivity to Bungie video games and their related functionality.  # noqa: E501

    OpenAPI spec version: 2.1.1
    Contact: support@bungie.com
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""


import pprint
import re  # noqa: F401

import six

from swagger_client.models.destiny_quests_destiny_objective_progress import DestinyQuestsDestinyObjectiveProgress  # noqa: F401,E501


class DestinyEntitiesItemsDestinyItemObjectivesComponent(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'objectives': 'list[DestinyQuestsDestinyObjectiveProgress]',
        'flavor_objective': 'object'
    }

    attribute_map = {
        'objectives': 'objectives',
        'flavor_objective': 'flavorObjective'
    }

    def __init__(self, objectives=None, flavor_objective=None):  # noqa: E501
        """DestinyEntitiesItemsDestinyItemObjectivesComponent - a model defined in Swagger"""  # noqa: E501

        self._objectives = None
        self._flavor_objective = None
        self.discriminator = None

        if objectives is not None:
            self.objectives = objectives
        if flavor_objective is not None:
            self.flavor_objective = flavor_objective

    @property
    def objectives(self):
        """Gets the objectives of this DestinyEntitiesItemsDestinyItemObjectivesComponent.  # noqa: E501

        If the item has a hard association with objectives, your progress on them will be defined here.   Objectives are our standard way to describe a series of tasks that have to be completed for a reward.  # noqa: E501

        :return: The objectives of this DestinyEntitiesItemsDestinyItemObjectivesComponent.  # noqa: E501
        :rtype: list[DestinyQuestsDestinyObjectiveProgress]
        """
        return self._objectives

    @objectives.setter
    def objectives(self, objectives):
        """Sets the objectives of this DestinyEntitiesItemsDestinyItemObjectivesComponent.

        If the item has a hard association with objectives, your progress on them will be defined here.   Objectives are our standard way to describe a series of tasks that have to be completed for a reward.  # noqa: E501

        :param objectives: The objectives of this DestinyEntitiesItemsDestinyItemObjectivesComponent.  # noqa: E501
        :type: list[DestinyQuestsDestinyObjectiveProgress]
        """

        self._objectives = objectives

    @property
    def flavor_objective(self):
        """Gets the flavor_objective of this DestinyEntitiesItemsDestinyItemObjectivesComponent.  # noqa: E501

        I may regret naming it this way - but this represents when an item has an objective that doesn't serve a beneficial purpose, but rather is used for \"flavor\" or additional information. For instance, when Emblems track specific stats, those stats are represented as Objectives on the item.  # noqa: E501

        :return: The flavor_objective of this DestinyEntitiesItemsDestinyItemObjectivesComponent.  # noqa: E501
        :rtype: object
        """
        return self._flavor_objective

    @flavor_objective.setter
    def flavor_objective(self, flavor_objective):
        """Sets the flavor_objective of this DestinyEntitiesItemsDestinyItemObjectivesComponent.

        I may regret naming it this way - but this represents when an item has an objective that doesn't serve a beneficial purpose, but rather is used for \"flavor\" or additional information. For instance, when Emblems track specific stats, those stats are represented as Objectives on the item.  # noqa: E501

        :param flavor_objective: The flavor_objective of this DestinyEntitiesItemsDestinyItemObjectivesComponent.  # noqa: E501
        :type: object
        """

        self._flavor_objective = flavor_objective

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, DestinyEntitiesItemsDestinyItemObjectivesComponent):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
