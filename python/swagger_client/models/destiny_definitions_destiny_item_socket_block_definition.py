# coding: utf-8

"""
    Bungie.Net API

    These endpoints constitute the functionality exposed by Bungie.net, both for more traditional website functionality and for connectivity to Bungie video games and their related functionality.  # noqa: E501

    OpenAPI spec version: 2.1.1
    Contact: support@bungie.com
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""


import pprint
import re  # noqa: F401

import six

from swagger_client.models.destiny_definitions_destiny_item_intrinsic_socket_entry_definition import DestinyDefinitionsDestinyItemIntrinsicSocketEntryDefinition  # noqa: F401,E501
from swagger_client.models.destiny_definitions_destiny_item_socket_category_definition import DestinyDefinitionsDestinyItemSocketCategoryDefinition  # noqa: F401,E501
from swagger_client.models.destiny_definitions_destiny_item_socket_entry_definition import DestinyDefinitionsDestinyItemSocketEntryDefinition  # noqa: F401,E501


class DestinyDefinitionsDestinyItemSocketBlockDefinition(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'detail': 'str',
        'socket_entries': 'list[DestinyDefinitionsDestinyItemSocketEntryDefinition]',
        'intrinsic_sockets': 'list[DestinyDefinitionsDestinyItemIntrinsicSocketEntryDefinition]',
        'socket_categories': 'list[DestinyDefinitionsDestinyItemSocketCategoryDefinition]'
    }

    attribute_map = {
        'detail': 'detail',
        'socket_entries': 'socketEntries',
        'intrinsic_sockets': 'intrinsicSockets',
        'socket_categories': 'socketCategories'
    }

    def __init__(self, detail=None, socket_entries=None, intrinsic_sockets=None, socket_categories=None):  # noqa: E501
        """DestinyDefinitionsDestinyItemSocketBlockDefinition - a model defined in Swagger"""  # noqa: E501

        self._detail = None
        self._socket_entries = None
        self._intrinsic_sockets = None
        self._socket_categories = None
        self.discriminator = None

        if detail is not None:
            self.detail = detail
        if socket_entries is not None:
            self.socket_entries = socket_entries
        if intrinsic_sockets is not None:
            self.intrinsic_sockets = intrinsic_sockets
        if socket_categories is not None:
            self.socket_categories = socket_categories

    @property
    def detail(self):
        """Gets the detail of this DestinyDefinitionsDestinyItemSocketBlockDefinition.  # noqa: E501

        This was supposed to be a string that would give per-item details about sockets. In practice, it turns out that all this ever has is the localized word \"details\". ... that's lame, but perhaps it will become something cool in the future.  # noqa: E501

        :return: The detail of this DestinyDefinitionsDestinyItemSocketBlockDefinition.  # noqa: E501
        :rtype: str
        """
        return self._detail

    @detail.setter
    def detail(self, detail):
        """Sets the detail of this DestinyDefinitionsDestinyItemSocketBlockDefinition.

        This was supposed to be a string that would give per-item details about sockets. In practice, it turns out that all this ever has is the localized word \"details\". ... that's lame, but perhaps it will become something cool in the future.  # noqa: E501

        :param detail: The detail of this DestinyDefinitionsDestinyItemSocketBlockDefinition.  # noqa: E501
        :type: str
        """

        self._detail = detail

    @property
    def socket_entries(self):
        """Gets the socket_entries of this DestinyDefinitionsDestinyItemSocketBlockDefinition.  # noqa: E501

        Each non-intrinsic (or mutable) socket on an item is defined here. Check inside for more info.  # noqa: E501

        :return: The socket_entries of this DestinyDefinitionsDestinyItemSocketBlockDefinition.  # noqa: E501
        :rtype: list[DestinyDefinitionsDestinyItemSocketEntryDefinition]
        """
        return self._socket_entries

    @socket_entries.setter
    def socket_entries(self, socket_entries):
        """Sets the socket_entries of this DestinyDefinitionsDestinyItemSocketBlockDefinition.

        Each non-intrinsic (or mutable) socket on an item is defined here. Check inside for more info.  # noqa: E501

        :param socket_entries: The socket_entries of this DestinyDefinitionsDestinyItemSocketBlockDefinition.  # noqa: E501
        :type: list[DestinyDefinitionsDestinyItemSocketEntryDefinition]
        """

        self._socket_entries = socket_entries

    @property
    def intrinsic_sockets(self):
        """Gets the intrinsic_sockets of this DestinyDefinitionsDestinyItemSocketBlockDefinition.  # noqa: E501

        Each intrinsic (or immutable/permanent) socket on an item is defined here, along with the plug that is permanently affixed to the socket.  # noqa: E501

        :return: The intrinsic_sockets of this DestinyDefinitionsDestinyItemSocketBlockDefinition.  # noqa: E501
        :rtype: list[DestinyDefinitionsDestinyItemIntrinsicSocketEntryDefinition]
        """
        return self._intrinsic_sockets

    @intrinsic_sockets.setter
    def intrinsic_sockets(self, intrinsic_sockets):
        """Sets the intrinsic_sockets of this DestinyDefinitionsDestinyItemSocketBlockDefinition.

        Each intrinsic (or immutable/permanent) socket on an item is defined here, along with the plug that is permanently affixed to the socket.  # noqa: E501

        :param intrinsic_sockets: The intrinsic_sockets of this DestinyDefinitionsDestinyItemSocketBlockDefinition.  # noqa: E501
        :type: list[DestinyDefinitionsDestinyItemIntrinsicSocketEntryDefinition]
        """

        self._intrinsic_sockets = intrinsic_sockets

    @property
    def socket_categories(self):
        """Gets the socket_categories of this DestinyDefinitionsDestinyItemSocketBlockDefinition.  # noqa: E501

        A convenience property, that refers to the sockets in the \"sockets\" property, pre-grouped by category and ordered in the manner that they should be grouped in the UI. You could form this yourself with the existing data, but why would you want to? Enjoy life man.  # noqa: E501

        :return: The socket_categories of this DestinyDefinitionsDestinyItemSocketBlockDefinition.  # noqa: E501
        :rtype: list[DestinyDefinitionsDestinyItemSocketCategoryDefinition]
        """
        return self._socket_categories

    @socket_categories.setter
    def socket_categories(self, socket_categories):
        """Sets the socket_categories of this DestinyDefinitionsDestinyItemSocketBlockDefinition.

        A convenience property, that refers to the sockets in the \"sockets\" property, pre-grouped by category and ordered in the manner that they should be grouped in the UI. You could form this yourself with the existing data, but why would you want to? Enjoy life man.  # noqa: E501

        :param socket_categories: The socket_categories of this DestinyDefinitionsDestinyItemSocketBlockDefinition.  # noqa: E501
        :type: list[DestinyDefinitionsDestinyItemSocketCategoryDefinition]
        """

        self._socket_categories = socket_categories

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, DestinyDefinitionsDestinyItemSocketBlockDefinition):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
