# coding: utf-8

"""
    Bungie.Net API

    These endpoints constitute the functionality exposed by Bungie.net, both for more traditional website functionality and for connectivity to Bungie video games and their related functionality.  # noqa: E501

    OpenAPI spec version: 2.1.1
    Contact: support@bungie.com
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""


import pprint
import re  # noqa: F401

import six

from swagger_client.models.dictionary_component_response_ofint64_and_destiny_item_instance_component import DictionaryComponentResponseOfint64AndDestinyItemInstanceComponent  # noqa: F401,E501
from swagger_client.models.dictionary_component_response_ofint64_and_destiny_item_objectives_component import DictionaryComponentResponseOfint64AndDestinyItemObjectivesComponent  # noqa: F401,E501
from swagger_client.models.dictionary_component_response_ofint64_and_destiny_item_perks_component import DictionaryComponentResponseOfint64AndDestinyItemPerksComponent  # noqa: F401,E501
from swagger_client.models.dictionary_component_response_ofint64_and_destiny_item_render_component import DictionaryComponentResponseOfint64AndDestinyItemRenderComponent  # noqa: F401,E501
from swagger_client.models.dictionary_component_response_ofint64_and_destiny_item_sockets_component import DictionaryComponentResponseOfint64AndDestinyItemSocketsComponent  # noqa: F401,E501
from swagger_client.models.dictionary_component_response_ofint64_and_destiny_item_stats_component import DictionaryComponentResponseOfint64AndDestinyItemStatsComponent  # noqa: F401,E501
from swagger_client.models.dictionary_component_response_ofint64_and_destiny_item_talent_grid_component import DictionaryComponentResponseOfint64AndDestinyItemTalentGridComponent  # noqa: F401,E501
from swagger_client.models.dictionary_component_response_ofuint32_and_destiny_item_plug_component import DictionaryComponentResponseOfuint32AndDestinyItemPlugComponent  # noqa: F401,E501


class DestinyItemComponentSetOfint64(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'instances': 'DictionaryComponentResponseOfint64AndDestinyItemInstanceComponent',
        'objectives': 'DictionaryComponentResponseOfint64AndDestinyItemObjectivesComponent',
        'perks': 'DictionaryComponentResponseOfint64AndDestinyItemPerksComponent',
        'render_data': 'DictionaryComponentResponseOfint64AndDestinyItemRenderComponent',
        'stats': 'DictionaryComponentResponseOfint64AndDestinyItemStatsComponent',
        'sockets': 'DictionaryComponentResponseOfint64AndDestinyItemSocketsComponent',
        'talent_grids': 'DictionaryComponentResponseOfint64AndDestinyItemTalentGridComponent',
        'plug_states': 'DictionaryComponentResponseOfuint32AndDestinyItemPlugComponent'
    }

    attribute_map = {
        'instances': 'instances',
        'objectives': 'objectives',
        'perks': 'perks',
        'render_data': 'renderData',
        'stats': 'stats',
        'sockets': 'sockets',
        'talent_grids': 'talentGrids',
        'plug_states': 'plugStates'
    }

    def __init__(self, instances=None, objectives=None, perks=None, render_data=None, stats=None, sockets=None, talent_grids=None, plug_states=None):  # noqa: E501
        """DestinyItemComponentSetOfint64 - a model defined in Swagger"""  # noqa: E501

        self._instances = None
        self._objectives = None
        self._perks = None
        self._render_data = None
        self._stats = None
        self._sockets = None
        self._talent_grids = None
        self._plug_states = None
        self.discriminator = None

        if instances is not None:
            self.instances = instances
        if objectives is not None:
            self.objectives = objectives
        if perks is not None:
            self.perks = perks
        if render_data is not None:
            self.render_data = render_data
        if stats is not None:
            self.stats = stats
        if sockets is not None:
            self.sockets = sockets
        if talent_grids is not None:
            self.talent_grids = talent_grids
        if plug_states is not None:
            self.plug_states = plug_states

    @property
    def instances(self):
        """Gets the instances of this DestinyItemComponentSetOfint64.  # noqa: E501


        :return: The instances of this DestinyItemComponentSetOfint64.  # noqa: E501
        :rtype: DictionaryComponentResponseOfint64AndDestinyItemInstanceComponent
        """
        return self._instances

    @instances.setter
    def instances(self, instances):
        """Sets the instances of this DestinyItemComponentSetOfint64.


        :param instances: The instances of this DestinyItemComponentSetOfint64.  # noqa: E501
        :type: DictionaryComponentResponseOfint64AndDestinyItemInstanceComponent
        """

        self._instances = instances

    @property
    def objectives(self):
        """Gets the objectives of this DestinyItemComponentSetOfint64.  # noqa: E501


        :return: The objectives of this DestinyItemComponentSetOfint64.  # noqa: E501
        :rtype: DictionaryComponentResponseOfint64AndDestinyItemObjectivesComponent
        """
        return self._objectives

    @objectives.setter
    def objectives(self, objectives):
        """Sets the objectives of this DestinyItemComponentSetOfint64.


        :param objectives: The objectives of this DestinyItemComponentSetOfint64.  # noqa: E501
        :type: DictionaryComponentResponseOfint64AndDestinyItemObjectivesComponent
        """

        self._objectives = objectives

    @property
    def perks(self):
        """Gets the perks of this DestinyItemComponentSetOfint64.  # noqa: E501


        :return: The perks of this DestinyItemComponentSetOfint64.  # noqa: E501
        :rtype: DictionaryComponentResponseOfint64AndDestinyItemPerksComponent
        """
        return self._perks

    @perks.setter
    def perks(self, perks):
        """Sets the perks of this DestinyItemComponentSetOfint64.


        :param perks: The perks of this DestinyItemComponentSetOfint64.  # noqa: E501
        :type: DictionaryComponentResponseOfint64AndDestinyItemPerksComponent
        """

        self._perks = perks

    @property
    def render_data(self):
        """Gets the render_data of this DestinyItemComponentSetOfint64.  # noqa: E501


        :return: The render_data of this DestinyItemComponentSetOfint64.  # noqa: E501
        :rtype: DictionaryComponentResponseOfint64AndDestinyItemRenderComponent
        """
        return self._render_data

    @render_data.setter
    def render_data(self, render_data):
        """Sets the render_data of this DestinyItemComponentSetOfint64.


        :param render_data: The render_data of this DestinyItemComponentSetOfint64.  # noqa: E501
        :type: DictionaryComponentResponseOfint64AndDestinyItemRenderComponent
        """

        self._render_data = render_data

    @property
    def stats(self):
        """Gets the stats of this DestinyItemComponentSetOfint64.  # noqa: E501


        :return: The stats of this DestinyItemComponentSetOfint64.  # noqa: E501
        :rtype: DictionaryComponentResponseOfint64AndDestinyItemStatsComponent
        """
        return self._stats

    @stats.setter
    def stats(self, stats):
        """Sets the stats of this DestinyItemComponentSetOfint64.


        :param stats: The stats of this DestinyItemComponentSetOfint64.  # noqa: E501
        :type: DictionaryComponentResponseOfint64AndDestinyItemStatsComponent
        """

        self._stats = stats

    @property
    def sockets(self):
        """Gets the sockets of this DestinyItemComponentSetOfint64.  # noqa: E501


        :return: The sockets of this DestinyItemComponentSetOfint64.  # noqa: E501
        :rtype: DictionaryComponentResponseOfint64AndDestinyItemSocketsComponent
        """
        return self._sockets

    @sockets.setter
    def sockets(self, sockets):
        """Sets the sockets of this DestinyItemComponentSetOfint64.


        :param sockets: The sockets of this DestinyItemComponentSetOfint64.  # noqa: E501
        :type: DictionaryComponentResponseOfint64AndDestinyItemSocketsComponent
        """

        self._sockets = sockets

    @property
    def talent_grids(self):
        """Gets the talent_grids of this DestinyItemComponentSetOfint64.  # noqa: E501


        :return: The talent_grids of this DestinyItemComponentSetOfint64.  # noqa: E501
        :rtype: DictionaryComponentResponseOfint64AndDestinyItemTalentGridComponent
        """
        return self._talent_grids

    @talent_grids.setter
    def talent_grids(self, talent_grids):
        """Sets the talent_grids of this DestinyItemComponentSetOfint64.


        :param talent_grids: The talent_grids of this DestinyItemComponentSetOfint64.  # noqa: E501
        :type: DictionaryComponentResponseOfint64AndDestinyItemTalentGridComponent
        """

        self._talent_grids = talent_grids

    @property
    def plug_states(self):
        """Gets the plug_states of this DestinyItemComponentSetOfint64.  # noqa: E501


        :return: The plug_states of this DestinyItemComponentSetOfint64.  # noqa: E501
        :rtype: DictionaryComponentResponseOfuint32AndDestinyItemPlugComponent
        """
        return self._plug_states

    @plug_states.setter
    def plug_states(self, plug_states):
        """Sets the plug_states of this DestinyItemComponentSetOfint64.


        :param plug_states: The plug_states of this DestinyItemComponentSetOfint64.  # noqa: E501
        :type: DictionaryComponentResponseOfuint32AndDestinyItemPlugComponent
        """

        self._plug_states = plug_states

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, DestinyItemComponentSetOfint64):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
